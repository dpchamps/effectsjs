{"componentChunkName":"component---src-components-example-template-js","path":"/examples/get-http-resource","result":{"data":{"file":{"fields":{"exampleSourceCode":"function analyzePage () {\n  const url = window.location.href\n  const size = perform { type: 'get_page_size', payload: { url } }\n  const { path: analysisPath } = perform { type: 'flush_analysis', payload: { url, size } }\n  console.info(`analysis { size: ${size}, url: '${url}' } written to: ${analysisPath}`)\n}\n\nfunction main () {\n  'use effects'\n  try {\n    analyzePage() // observe, _not_ async!\n  } handle (evt) {\n    switch (evt.type) {\n      case 'get_page_size': getPageSize(evt.payload.url).then(size => { recall size })\n      case 'flush_analysis': flushAnalysis(evt.payload).then(metadata => { recall metadata })\n    }\n  }\n}\n\nasync function getPageSize (url) {\n  const res = await fetch(url)\n  if (!res.ok) throw new Error('failed to fetch page size')\n  return parseFloat(res.headers.get(\"content-length\"))\n}\n\nfunction flushAnalysis (payload) {\n  // createReadStream(payload).pipe(fs.createWriteStream(...))\n  return Promise.resolve(payload).then(() => ({ path: '/var/analyses/123.json' }))\n}\n\nmain()\n"}}},"pageContext":{"slug":"/pages/examples/get-http-resource"}}}