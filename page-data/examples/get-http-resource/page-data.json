{"componentChunkName":"component---src-components-example-template-js","path":"/examples/get-http-resource","result":{"data":{"file":{"fields":{"exampleSourceCode":"function main () {\n  'use effects'\n  try {\n    analyzePage() // observe, _not_ async!\n  } handle 'get_page_size' with (evt) {\n    getPageSize(evt.payload.url).then(size => { recall size });\n  } handle 'flush_analysis' with (evt) {\n    flushAnalysis(evt.payload).then(metadata => { recall metadata });\n  }\n}\n\nfunction analyzePage () {\n  const start = Date.now()\n  const url = location.href\n  const size = perform { type: 'get_page_size', payload: { url } }\n  const { path: analysisPath } = perform { type: 'flush_analysis', payload: { url, size } }\n  const finish = Date.now()\n  console.info(`{ duration: '${finish - start}ms', size: '${(size/1000).toFixed(2)}kb', url: '${url}' } written to: ${analysisPath}`)\n}\n\nasync function getPageSize (url) {\n  const res = await fetch(url)\n  if (!res.ok) throw new Error('failed to fetch page size')\n  return parseFloat(res.headers.get(\"content-length\"))\n}\n\nfunction flushAnalysis (payload) {\n  return Promise.resolve(payload).then(() => ({ path: '/var/analyses/123.json' }))\n}\n\nmain()\n"}}},"pageContext":{"slug":"/pages/examples/get-http-resource"}}}