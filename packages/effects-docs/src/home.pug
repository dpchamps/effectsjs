.node
  h2 What is it?
.node
  p Extensions to the javascript language, enabling new control flows
    |  that may be well suited to a variety of general purpose programming contexts.

.node
  h2 Example
.node.eff
  :markdown-it(linkify langPrefix='highlight-')
    ```js
    'use effects'
    try {
      await work()
    } handle (event) {
      switch event.type {
        case 'log': {
          console.log(event)
          resume
        }
      }
    }
    const work () =>
      fetch(...)
        .then(res => {
          perform { type: 'log', message: `fetch completed with status: ${res.status}` }
          return res
        })
        .then(res => res.json())
    ```
  p
    | As seen above, the
    code  'use effects'
    |  directive enables the user to begin using effects
    a.super(href='#whyuseeffects') 1
    | . Further, you may observe that a few new keywords have been added:
  h3 Effects keywords
  :markdown-it(linkify langPrefix='highlight-')
    | Keyword | Description |
    | :-      | :- |
    | `perform` | Initiates an effect. The current function halts, and later resumes when an effect handler `resume`s |
    | `handle` | `try/handle` blocks allow users to specify handlers for effect events, using well-known `try/catch`-like semantics.  `try/handle` is _not_ compatible with `try/catch` |
    | `resume` | Resumes the previously halted function, who called `perform`. |
.node.funsies
  include components/logo.pug
  +logo
.node
  h2 References
  :markdown-it(linkify langPrefix='highlight-')
    | Reference | Description |
    | :-      | :- |
    | Source code | [github.com/dpchamps/effectsjs](https://github.com/dpchamps/effectsjs) |
    | Dan's Conceptualization | [Algebraic Effects for the Rest of Us](https://overreacted.io/algebraic-effects-for-the-rest-of-us/) |
.node
  h2 FAQ
  h3 Why do I need to use `'use effects'`?
  a(name='whyuseeffects')
  p The `'use effects'` directive is not desired for part of the specification. It is a temporary, syntactical necessity to enable the babel compiler to support `effectjs` at runtime.
  h3 Can I `perform` an effect from within an effect?
  a(name='nestedeffects')
  p Currently, no.  In the future, maybe!
