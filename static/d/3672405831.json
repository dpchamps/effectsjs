{"data":{"references":{"html":"<table>\n<thead>\n<tr>\n<th>Reference</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Source code</td>\n<td><a href=\"https://github.com/effectsjs/effectsjs\">github.com/effectsjs/effectsjs</a></td>\n</tr>\n<tr>\n<td>Dan's Conceptualization</td>\n<td><a href=\"https://overreacted.io/algebraic-effects-for-the-rest-of-us/\">Algebraic Effects for the Rest of Us</a></td>\n</tr>\n</tbody>\n</table>"},"keywords":{"html":"<table>\n<thead>\n<tr>\n<th>Keyword</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>perform</code></td>\n<td>Initiates an effect. The current function halts, and later resumes when an effect handler <code>resume</code>s</td>\n</tr>\n<tr>\n<td><code>handle</code></td>\n<td><code>try/handle</code> blocks allow users to specify handlers for effect events, using well-known <code>try/catch</code>-like semantics.  <code>try/handle</code> is <em>not</em> compatible with <code>try/catch</code></td>\n</tr>\n<tr>\n<td><code>resume</code></td>\n<td>Resumes the previously halted function, who called <code>perform</code>.</td>\n</tr>\n</tbody>\n</table>"}}}